#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞–∑–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π YandexGPT
"""

import os
import requests
import json

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
os.environ['YANDEX_API_KEY'] = 'AQVN18PYvPyNkfObkh7O9EWgcpXZzG47AEOc0lnU'
os.environ['YANDEX_FOLDER_ID'] = 'b1gvsm0staqq3jcivgl5'

def test_model(model_name):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –º–æ–¥–µ–ª—å"""
    
    api_key = os.getenv('YANDEX_API_KEY')
    folder_id = os.getenv('YANDEX_FOLDER_ID')
    
    print(f"üß™ –¢–µ—Å—Ç–∏—Ä—É—é –º–æ–¥–µ–ª—å: {model_name}")
    
    url = "https://llm.api.cloud.yandex.net/foundationModels/v1/completion"
    
    headers = {
        "Authorization": f"Api-Key {api_key}",
        "Content-Type": "application/json"
    }
    
    payload = {
        "modelUri": f"gpt://{folder_id}/{model_name}",
        "completionOptions": {
            "temperature": 0.3,
            "maxTokens": 50
        },
        "messages": [
            {
                "role": "user",
                "text": "–ü—Ä–∏–≤–µ—Ç"
            }
        ]
    }
    
    try:
        response = requests.post(url, headers=headers, json=payload, timeout=10)
        
        if response.status_code == 200:
            print(f"‚úÖ {model_name} - –†–ê–ë–û–¢–ê–ï–¢!")
            result = response.json()
            if "result" in result and "alternatives" in result["result"]:
                text = result["result"]["alternatives"][0]["message"]["text"]
                print(f"   –û—Ç–≤–µ—Ç: {text}")
        elif response.status_code == 403:
            print(f"‚ùå {model_name} - Permission denied")
        elif response.status_code == 404:
            print(f"‚ùå {model_name} - Model not found")
        else:
            print(f"‚ùå {model_name} - Error {response.status_code}: {response.text}")
            
    except Exception as e:
        print(f"‚ùå {model_name} - Exception: {e}")
    
    print()

def main():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏"""
    
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–µ–π YandexGPT")
    print("=" * 50)
    
    # –°–ø–∏—Å–æ–∫ –º–æ–¥–µ–ª–µ–π –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    models = [
        "yandexgpt-lite",
        "yandexgpt",
        "yandexgpt-lite:latest",
        "yandexgpt:latest",
        "gpt://b1gvsm0staqq3jcivgl5/yandexgpt-lite",
        "gpt://b1gvsm0staqq3jcivgl5/yandexgpt"
    ]
    
    for model in models:
        test_model(model)
    
    print("üìã –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    print("1. –ï—Å–ª–∏ –≤—Å–µ –º–æ–¥–µ–ª–∏ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç 403 - –ø—Ä–æ–±–ª–µ–º–∞ –≤ –ø—Ä–∞–≤–∞—Ö –¥–æ—Å—Ç—É–ø–∞")
    print("2. –ï—Å–ª–∏ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –º–æ–¥–µ–ª–∏ —Ä–∞–±–æ—Ç–∞—é—Ç - –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–∞–±–æ—Ç–∞—é—â—É—é")
    print("3. –ï—Å–ª–∏ –≤—Å–µ –º–æ–¥–µ–ª–∏ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç 404 - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ Folder ID")

if __name__ == "__main__":
    main() 