#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º —Å YandexGPT API
"""

import os
import requests
import json

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
os.environ['TELEGRAM_TOKEN'] = '8475569974:AAF1MWVwTail48jAWkpkQfx4hLk6aX9c3aI'
os.environ['YANDEX_API_KEY'] = 'AQVN18PYvPyNkfObkh7O9EWgcpXZzG47AEOc0lnU'
os.environ['YANDEX_FOLDER_ID'] = 'b1gvsm0staqq3jcivgl5'

def test_yandex_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ YandexGPT API"""
    
    api_key = os.getenv('YANDEX_API_KEY')
    folder_id = os.getenv('YANDEX_FOLDER_ID')
    
    print(f"üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ YandexGPT API")
    print(f"API Key: {api_key[:10]}..." if api_key else "‚ùå API Key –Ω–µ –Ω–∞–π–¥–µ–Ω")
    print(f"Folder ID: {folder_id}")
    print()
    
    if not api_key or not folder_id:
        print("‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–ª—é—á–∏")
        return
    
    # –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
    url = "https://llm.api.cloud.yandex.net/foundationModels/v1/completion"
    
    headers = {
        "Authorization": f"Api-Key {api_key}",
        "Content-Type": "application/json"
    }
    
    payload = {
        "modelUri": f"gpt://{folder_id}/yandexgpt-lite",
        "completionOptions": {
            "temperature": 0.3,
            "maxTokens": 100
        },
        "messages": [
            {
                "role": "system",
                "text": "–¢—ã –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ä—É—Å—Å–∫–∏–º —è–∑—ã–∫–æ–º."
            },
            {
                "role": "user",
                "text": "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?"
            }
        ]
    }
    
    print("üì° –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å...")
    print(f"URL: {url}")
    print(f"Headers: {headers}")
    print(f"Payload: {json.dumps(payload, indent=2, ensure_ascii=False)}")
    print()
    
    try:
        response = requests.post(url, headers=headers, json=payload, timeout=30)
        
        print(f"üìä –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:")
        print(f"Status Code: {response.status_code}")
        print(f"Headers: {dict(response.headers)}")
        print(f"Response: {response.text}")
        
        if response.status_code == 200:
            result = response.json()
            print("‚úÖ –ó–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–µ–Ω!")
            if "result" in result and "alternatives" in result["result"]:
                text = result["result"]["alternatives"][0]["message"]["text"]
                print(f"–û—Ç–≤–µ—Ç –º–æ–¥–µ–ª–∏: {text}")
        elif response.status_code == 403:
            print("‚ùå –û—à–∏–±–∫–∞ 403: Permission denied")
            print("–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
            print("1. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π API –∫–ª—é—á")
            print("2. –£ —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ YandexGPT")
            print("3. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π Folder ID")
            print("4. –°–µ—Ä–≤–∏—Å–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω")
        elif response.status_code == 401:
            print("‚ùå –û—à–∏–±–∫–∞ 401: Unauthorized")
            print("–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
            print("1. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π API –∫–ª—é—á")
            print("2. API –∫–ª—é—á –∏—Å—Ç–µ–∫")
        else:
            print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {response.status_code}")
            
    except requests.exceptions.Timeout:
        print("‚ùå –¢–∞–π–º–∞—É—Ç –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ")
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏: {e}")
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")

def check_yandex_cloud_setup():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Yandex Cloud"""
    print("üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ Yandex Cloud:")
    print()
    print("1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –Ω–∞ https://cloud.yandex.ru/")
    print("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å –ø–ª–∞—Ç–µ–∂–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç")
    print("3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∫–∞—Ç–∞–ª–æ–≥ (folder) —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    print("4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞:")
    print("   - –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ '–°–µ—Ä–≤–∏—Å–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã'")
    print("   - –ù–∞–π–¥–∏—Ç–µ –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç")
    print("   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞ —Ä–æ–ª—å 'AI Language Model User'")
    print("5. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ API –∫–ª—é—á –∞–∫—Ç–∏–≤–µ–Ω")
    print()

if __name__ == "__main__":
    test_yandex_api()
    print()
    check_yandex_cloud_setup() 